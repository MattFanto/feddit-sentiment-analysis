version: '3.8'
services:

  sentiment_analysis:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    healthcheck:
      test: "curl -f http://localhost:8000/api/v1/version || exit 1"
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 30s
    links:
      - "feddit:feddit"
    depends_on:
      feddit:
        condition: service_healthy
      db:
        condition: service_healthy
    environment:
      - FEDDIT_URL=http://feddit:8080
      - SENTIMENT_MODEL=${SENTIMENT_MODEL:-mocked}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:-}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:-}

  db:
    image: postgres:15
    environment:
      POSTGRES_PASSWORD: "mysecretpassword"
    ports:
      - "5432:5432"
    expose:
      - "5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

  feddit:
    image: chasingcars/feddit:latest
    entrypoint: >
      sh -c "sleep 5 && python main.py"
    environment:
      SQLALCHEMY_DATABASE_URI: "postgresql://postgres:mysecretpassword@db:5432/postgres"
    expose:
      - "8080"
    ports:
      - "8080:8080"
    healthcheck:
      # TODO workaround since the image didn't have CURL
      test: "python -c \"import requests; assert requests.get('http://localhost:8080/api/v1/version').status_code == 200\" || exit 1"
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 20s
    links:
      - "db:db"
    depends_on:
      - db

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    #      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    expose:
      - 9090
    ports:
      - "9090:9090"
